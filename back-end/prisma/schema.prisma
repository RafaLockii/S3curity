// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  nome          String
  senha         String
  email         String         @unique
  telefone      String
  token         String
  verified      Boolean       @default(false)
  funcionario   Funcionario?
  twoFactorAuth TwoFactorAuth?
}

model TwoFactorAuth {
  id         Int     @id @default(autoincrement())
  userId     Int     @unique
  user       User    @relation(fields: [userId], references: [id])
  secretKey  String
  isVerified Boolean @default(false)
}

model Funcionario {
  id                Int      @id @default(autoincrement())
  modulo_default    Int
  acesso_admin      Boolean
  cadastro_alterado DateTime @updatedAt
  usuario_cad_alt   String
  usuario_id        Int      @unique
  empresa_id        Int
  imagem_perfil_id  Int?

  modulos    Modulos[]    @relation("FuncionarioModulos")
  imagem     Imagem?
  user       User         @relation(fields: [usuario_id], references: [id])
  empresa    Empresa      @relation(fields: [empresa_id], references: [id])
  menus      Menus[]      @relation("FuncionarioMenus")
  itens      Itens[]      @relation("FuncionarioItens")
  relatorios Relatorios[] @relation("FuncionarioRelatorios")
}

model Empresa {
  id              Int           @id @default(autoincrement())
  nome            String        @unique
  razao_s         String?
  logo            String?
  data_alt        DateTime?
  imagem_fundo    String?
  usuario_criacao String
  data_criacao    DateTime
  usuario_cad_alt String?
  funcionarios    Funcionario[]
  carrosseis      Carrossel[]
}

model Imagem {
  id             Int         @id @default(autoincrement())
  caminho        String?
  nome           String?
  url            String
  funcionario_id Int         @unique
  funcionario    Funcionario @relation(fields: [funcionario_id], references: [id])
}

model Modulos {
  id   Int    @id @default(autoincrement())
  nome String

  Menus    Menus[]
  usuarios Funcionario[] @relation("FuncionarioModulos")
}

model Menus {
  id         Int           @id @default(autoincrement())
  nome       String
  modulos_id Int
  usuarios   Funcionario[] @relation("FuncionarioMenus")

  modulos Modulos @relation(fields: [modulos_id], references: [id])
  itens   Itens[]
}

model Itens {
  id       Int           @id @default(autoincrement())
  nome     String
  menus_id Int
  usuarios Funcionario[] @relation("FuncionarioItens")

  menus      Menus        @relation(fields: [menus_id], references: [id])
  relatorios Relatorios[]
}

model Relatorios {
  id        Int           @id @default(autoincrement())
  nome      String
  relatorio String
  itens_id  Int
  usuarios  Funcionario[] @relation("FuncionarioRelatorios")

  itens Itens @relation(fields: [itens_id], references: [id])
}

model Carrossel {
  id         Int    @id @default(autoincrement())
  nome       String
  empresa_id Int

  data_criacao DateTime

  empresa Empresa @relation(fields: [empresa_id], references: [id])
}
