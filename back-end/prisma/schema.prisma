// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  nome          String
  senha         String
  email         String         @unique
  telefone      String
  token         String
  verified      Boolean?       @default(false)
  funcionario   Funcionario?
  twoFactorAuth TwoFactorAuth?
}

model TwoFactorAuth {
  id         Int     @id @default(autoincrement())
  userId     Int     @unique
  user       User    @relation(fields: [userId], references: [id])
  secretKey  String
  isVerified Boolean @default(false)
}

model Funcionario {
  id                Int      @id @default(autoincrement())
  modulo_default    String
  acesso_admin      Boolean
  ativo             Boolean  @default(true)
  cadastro_alterado DateTime @updatedAt
  usuario_cad_alt   String
  cargo_id          Int?
  usuario_id        Int      @unique
  empresa_id        Int?
  imagem_perfil_id  Int?

  imagem  Imagem?
  user    User              @relation(fields: [usuario_id], references: [id])
  empresa Empresa?          @relation(fields: [empresa_id], references: [id])
  cargo   Cargos?           @relation(fields: [cargo_id], references: [cargo_id])
  menus   FuncionarioMenu[]
}

model Empresa {
  id              Int           @id @default(autoincrement())
  nome            String        @unique
  razao_s         String?
  logo            String?
  data_alt        DateTime?
  imagem_fundo    String?
  usuario_criacao String
  data_criacao    DateTime
  usuario_cad_alt String?
  funcionarios    Funcionario[]
  carrosseis      Carrossel[]
  menus           Menus[]
}

model Imagem {
  id             Int         @id @default(autoincrement())
  caminho        String?
  nome           String?
  url            String
  funcionario_id Int         @unique
  funcionario    Funcionario @relation(fields: [funcionario_id], references: [id])
}

model Cargos {
  cargo_id     Int           @id @default(autoincrement())
  nome_cargo   String
  permissoes   String
  funcionarios Funcionario[]
}

model Modulos {
  id   Int    @id @default(autoincrement())
  nome String

  Menus Menus[]
}

model Menus {
  id           Int               @id @default(autoincrement())
  nome         String
  modulos_id   Int
  empresa_id   Int
  funcionarios FuncionarioMenu[]

  empresa Empresa @relation(fields: [empresa_id], references: [id])
  modulos Modulos @relation(fields: [modulos_id], references: [id])
  itens   Itens[]
}

model FuncionarioMenu {
  funcionarioId Int
  funcionario   Funcionario @relation(fields: [funcionarioId], references: [id])

  menuId Int
  menu   Menus @relation(fields: [menuId], references: [id])

  @@id([funcionarioId, menuId])
}

model Itens {
  id       Int    @id @default(autoincrement())
  nome     String
  menus_id Int

  menus      Menus        @relation(fields: [menus_id], references: [id])
  relatorios relatorios[]
}

model relatorios {
  id        Int    @id @default(autoincrement())
  nome      String
  relatorio String
  itens_id  Int

  itens Itens @relation(fields: [itens_id], references: [id])
}

model Carrossel {
  id         Int    @id @default(autoincrement())
  nome       String
  empresa_id Int

  data_criacao DateTime

  empresa Empresa @relation(fields: [empresa_id], references: [id])
}
